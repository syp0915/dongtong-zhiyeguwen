<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shfc.house.dao.LeadsHouseCorrectMapper">
  <resultMap id="BaseResultMap" type="com.shfc.house.domain.LeadsHouseCorrect">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="leads_house_id" jdbcType="BIGINT" property="leadsHouseId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="audit_content" jdbcType="VARCHAR" property="auditContent" />
    <result column="audit_id" jdbcType="BIGINT" property="auditId" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="creater" jdbcType="BIGINT" property="creater" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, leads_house_id, content, audit_status, audit_content, audit_id, audit_time, creater, 
    create_time, modifier, modify_time, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from leads_house_correct
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from leads_house_correct
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.shfc.house.domain.LeadsHouseCorrect" useGeneratedKeys="true">
    insert into leads_house_correct (id, leads_house_id, content, 
      audit_status, audit_content, audit_id, 
      audit_time, creater, create_time, 
      modifier, modify_time, version
      )
    values (#{id,jdbcType=BIGINT}, #{leadsHouseId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=INTEGER}, #{auditContent,jdbcType=VARCHAR}, #{auditId,jdbcType=BIGINT}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=BIGINT}, now(), 
      #{modifier,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}, 0
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.shfc.house.domain.LeadsHouseCorrect" useGeneratedKeys="true">
    insert into leads_house_correct
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="leadsHouseId != null">
        leads_house_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="auditContent != null">
        audit_content,
      </if>
      <if test="auditId != null">
        audit_id,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="leadsHouseId != null">
        #{leadsHouseId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditContent != null">
        #{auditContent,jdbcType=VARCHAR},
      </if>
      <if test="auditId != null">
        #{auditId,jdbcType=BIGINT},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        0,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shfc.house.domain.LeadsHouseCorrect">
    update leads_house_correct
    <set>
      <if test="leadsHouseId != null">
        leads_house_id = #{leadsHouseId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditContent != null">
        audit_content = #{auditContent,jdbcType=VARCHAR},
      </if>
      <if test="auditId != null">
        audit_id = #{auditId,jdbcType=BIGINT},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      modify_time = now(),
      version = version+1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shfc.house.domain.LeadsHouseCorrect">
    update leads_house_correct
    set leads_house_id = #{leadsHouseId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      audit_content = #{auditContent,jdbcType=VARCHAR},
      audit_id = #{auditId,jdbcType=BIGINT},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT},
      modify_time = now(),
      version = version+1
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
</mapper>