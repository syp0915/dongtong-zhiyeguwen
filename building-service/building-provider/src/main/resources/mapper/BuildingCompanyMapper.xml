<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shfc.building.dao.BuildingCompanyMapper">
  <resultMap id="BaseResultMap" type="com.shfc.building.domain.BuildingCompany">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="compactNo" jdbcType="VARCHAR" property="compactno" />
    <result column="type" jdbcType="BIGINT" property="type" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="contactName" jdbcType="VARCHAR" property="contactname" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, compactNo, type, phone, contactName, address, status, creator, create_time, 
    modifier, modify_time, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from building_company
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from building_company
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.shfc.building.domain.BuildingCompany" useGeneratedKeys="true">
    insert into building_company (id, name, compactNo, 
      type, phone, contactName, 
      address, status, creator, 
      create_time, modifier, modify_time, 
      version)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{compactno,jdbcType=VARCHAR}, 
      #{type,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{contactname,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{creator,jdbcType=BIGINT}, 
      now(), #{modifier,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}, 
      0)
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.shfc.building.domain.BuildingCompany" useGeneratedKeys="true">
    insert into building_company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="compactno != null">
        compactNo,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="contactname != null">
        contactName,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="compactno != null">
        #{compactno,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="contactname != null">
        #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        0,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shfc.building.domain.BuildingCompany">
    update building_company
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="compactno != null">
        compactNo = #{compactno,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="contactname != null">
        contactName = #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      modify_time = now(),
      version = version+1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shfc.building.domain.BuildingCompany">
    update building_company
    set name = #{name,jdbcType=VARCHAR},
      compactNo = #{compactno,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      contactName = #{contactname,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      creator = #{creator,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT},
      modify_time = now(),
      version = version+1
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
</mapper>